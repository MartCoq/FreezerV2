
#redirection http => https
server {
    listen       80;
    listen  [::]:80;
    server_name  www.romj.fr;
    return 301 https://$host$request_uri;

    #access_log  /var/log/nginx/host.access.log  main;

}
server {
	
	# activation de l'écoute sur le port 443 + assignation du serveur de base
	listen 443 ssl;
	listen [::]:443 ssl;
	server_name www.romj.fr;

	# paramétrage des fichiers de configuration SSL
	ssl_certificate /etc/nginx/ssl/nginx_cert.crt;
	ssl_certificate_key /etc/nginx/ssl/nginx_key.key;
	ssl_protocols TLSV1 TLSV1.1 TLSV1.2 TLSV1.3;
	ssl_ciphers HIGH:!aNULL:!MD5;
	ssl_password_file /etc/nginx/ssl/passphrase_key_rsa;
	
	location / {
		root   /usr/share/nginx/html;
        	index  index.html index.htm;
   	}
	
	#redirection vers tomcat en local
	location ~ /tomcat/(.*) {
		rewrite ^/tomcat/(.*) /$1 break;
		proxy_pass http://192.170.0.20:8080;
		proxy_http_version 1.1;
		proxy_cache_bypass $http_upgrade;

		proxy_set_header Host              $host;
		proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header X-Real-IP         $remote_addr;
		proxy_set_header X-Forwarded-Host  $host;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Port  $server_port;



	}


	location ~ "^/static/[0-9a-fA-F]{8}\/(.*)$" {
    	# rewrite all static files into requests to the root
    	# E.g /static/12345678/css/something.css will become /css/something.css
		rewrite "^/static/[0-9a-fA-F]{8}\/(.*)" /$1 last;
	 	}

	#redirection vers jenkins en local
	location ~ /jenkins/(.*) {
	
		root /var/jenkins_home/war;
		rewrite ^/jenkins/(.*) /$1 break;

		sendfile off;
      		proxy_pass         http://jenkins;
      		proxy_redirect     default;
      		proxy_http_version 1.1;

      		# Required for Jenkins websocket agents
      		proxy_set_header   Connection        $connection_upgrade;
      		proxy_set_header   Upgrade           $http_upgrade;

      		proxy_set_header   Host              $host;
      		proxy_set_header   X-Real-IP         $remote_addr;
      		proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
      		proxy_set_header   X-Forwarded-Proto $scheme;
      		proxy_max_temp_file_size 0;

      		#this is the maximum upload size
      		client_max_body_size       10m;
      		client_body_buffer_size    128k;

      		proxy_connect_timeout      90;
      		proxy_send_timeout         90;
      		proxy_read_timeout         90;
      		proxy_buffering            off;
      		proxy_request_buffering    off; # Required for HTTP CLI commands
      		proxy_set_header Connection ""; # Clear for keepalive
	}



    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }






}
    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}}

